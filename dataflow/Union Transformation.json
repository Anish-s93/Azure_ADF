{
	"name": "Union Transformation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Emp_Dataset_100",
						"type": "DatasetReference"
					},
					"name": "Dep100"
				},
				{
					"dataset": {
						"referenceName": "Dep50employeessDS",
						"type": "DatasetReference"
					},
					"name": "Dep50"
				},
				{
					"dataset": {
						"referenceName": "OtherEmpDS",
						"type": "DatasetReference"
					},
					"name": "Otheremp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DestinationDS",
						"type": "DatasetReference"
					},
					"name": "Allempsink"
				}
			],
			"transformations": [
				{
					"name": "unionEmployees"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Dep100",
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Dep50",
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Otheremp",
				"Dep100, Dep50, Otheremp union(byName: true)~> unionEmployees",
				"unionEmployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DEPARTMENT_ID as string,",
				"          TotalEmployees as string",
				"     ),",
				"     partitionFileNames:['all_emp.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> Allempsink"
			]
		}
	}
}