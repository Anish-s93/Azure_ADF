{
	"name": "ConditionalSplit",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EmpDataset",
						"type": "DatasetReference"
					},
					"name": "EmpData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DestinationDS",
						"type": "DatasetReference"
					},
					"name": "Dep100"
				},
				{
					"dataset": {
						"referenceName": "DestinationDS",
						"type": "DatasetReference"
					},
					"name": "Dep50"
				},
				{
					"dataset": {
						"referenceName": "DestinationDS",
						"type": "DatasetReference"
					},
					"name": "OtherDeparments"
				}
			],
			"transformations": [
				{
					"name": "Splitbasedondepartment"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmpData",
				"EmpData split(equals(DEPARTMENT_ID, '100'),",
				"     equals(DEPARTMENT_ID,'50'),",
				"     disjoint: false) ~> Splitbasedondepartment@(Dep100, Dep50, Others)",
				"Splitbasedondepartment@Dep100 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DEPARTMENT_ID as string,",
				"          TotalEmployees as string",
				"     ),",
				"     partitionFileNames:['Department100'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> Dep100",
				"Splitbasedondepartment@Dep50 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DEPARTMENT_ID as string,",
				"          TotalEmployees as string",
				"     ),",
				"     partitionFileNames:['Department50'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> Dep50",
				"Splitbasedondepartment@Others sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DEPARTMENT_ID as string,",
				"          TotalEmployees as string",
				"     ),",
				"     partitionFileNames:['OtherDeparments'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> OtherDeparments"
			]
		}
	}
}